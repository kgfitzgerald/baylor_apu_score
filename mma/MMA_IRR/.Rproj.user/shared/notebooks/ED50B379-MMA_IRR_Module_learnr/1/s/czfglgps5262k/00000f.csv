"0","square <- function(x) (x * x)"
"0",""
"0","# takes a df in form of the Fleiss df and returns the proportion of observed agreement"
"0","Fleiss_prop_obs <- function(df){"
"0","  squares <- df %>%"
"0","    select(-fight) %>% "
"0","    mutate(across(where(is.numeric), square, .names = ""{col}_squared"")) %>%"
"0","    summarise(across(ends_with(""squared""), mean) * n()) %>%"
"0","    transmute(Total_Squares = rowSums(.)) %>%"
"0","    pull()"
"0","  "
"0","  N <- count(df) %>% pull()"
"0","  n <- 3"
"0","  value = round(1/(N * n * (n - 1)) * (squares - (N * n)), digits = 3)"
"0","  return(value)}"
"0",""
"0","# calculates frequency values for expected agreement"
"0","Fleiss_prop_exp_freq <- function(df, column){"
"0","  df %>%"
"0","    select(-fight) %>%"
"0","    summarise("
"0","      across(where(is.numeric), mean)/3) %>%"
"0","    transmute(across(where(is.numeric), round, digits = 3)) %>%"
"0","    as_vector() %>% extract2(column)}"
"0",""
"0","# calculates proportion of expected agreement"
"0","Fleiss_prop_exp <- function(df){"
"0","  df %>%"
"0","    select(-fight) %>%"
"0","    summarise("
"0","      across(where(is.numeric), mean)/3) %>%"
"0","    transmute(across(where(is.numeric), square, .names = ""{col}_freq2"")) %>%"
"0","    transmute(Total_Squares = round(rowSums(.), 3)) %>%"
"0","    pull()}"
"0",""
"0","Fleiss_kappa <- function(df){"
"0","  o <- df %>% Fleiss_prop_obs"
"0","  e <- df %>% Fleiss_prop_exp()"
"0","  k <- round((o - e)/(1 - e), 3)"
"0","  return(k)"
"0","}"
"0",""
"0","F_prop_obs <- Fleiss %>% Fleiss_prop_obs()"
"0","F_prop_exp <- Fleiss %>% Fleiss_prop_exp()"
"0","F_kappa <- Fleiss %>% Fleiss_kappa()"
"0",""
"0","F_conf_int <- Fleiss %>% select(Collett, Lethaby, Cartlidge) %>%"
"0","  KappaM(method = ""Fleiss"", conf.level = .95) %>% as_tibble() %>% pull() %>%"
"0","  round(digits = 3)"
"0",""
"0","F_indiv <- Fleiss %>% select(Collett, Lethaby, Cartlidge) %>% kappam.fleiss(detail = TRUE)"
