"0","# creating function that takes the df judges and two judge inputs. It will return a filtered df that has the first input as judge01 and the second input as judge02"
"0",""
"0","compare <- function(df, judge01, judge02) {"
"0","df_new <- df %>% filter(judge == judge01) %>%"
"0","    pivot_longer(c(judge2, judge3), values_to = ""judge_pair"", names_to = ""type"") %>%"
"0","    filter(judge_pair == judge02) %>%"
"0","    mutate("
"0","      judge02_score1 = if_else(type == ""judge2"", judge2_score1, judge3_score1),"
"0","      judge02_score2 = if_else(type == ""judge2"", judge2_score2, judge3_score2),"
"0","      judge02_margin = if_else(type == ""judge2"", judge2_margin, judge3_margin),"
"0","      judge02_perc = if_else(type == ""judge2"", judge2_perc, judge3_perc),"
"0","      judge02_dev = if_else(type == ""judge2"", judge2_dev, judge3_dev),"
"0","      judge02_out = if_else(type == ""judge2"", judge2_out, judge3_out),"
"0","      judge01_score1 = judge_score1,"
"0","      judge01_score2 = judge_score2,"
"0","      judge01_margin = judge_margin,"
"0","      judge01_perc = judge_perc,"
"0","      judge01_dev = judge_dev,"
"0","      judge01_out = judge_out,"
"0","      agreement = case_when("
"0","        judge01_out == judge02_out ~ ""Agree"","
"0","        .default = ""Disagree""),"
"0","      judge01_out = recode(judge01_out,"
"0","                           'Winner' = 'fighter1',"
"0","                           'Loser' = 'fighter2'),"
"0","      judge02_out = recode(judge02_out,"
"0","                           'Winner' = 'fighter1',"
"0","                           'Loser' = 'fighter2'),"
"0","      judge01_out = factor(judge01_out, levels = c(""fighter1"", ""draw"", ""fighter2"")),"
"0","      judge02_out = factor(judge02_out, levels = c(""fighter1"", ""draw"", ""fighter2""))) %>% "
"0","    select(date, event, arena, city, fighter1, fighter2, result_type, agreement, winner, winner2, rounds,"
"0","           judge01_score1, judge01_score2, judge01_margin, judge01_perc, judge01_dev, judge01_out,"
"0","           judge02_score1, judge02_score2, judge02_margin, judge02_perc, judge02_dev, judge02_out)"
"0",""
"0","# take out apostrophe of d'amato"
"0","judge01 <- gsub(""'"", '', judge01)"
"0","judge02 <- gsub(""'"", '', judge02)"
"0",""
"0","# change column names"
"0","colnames(df_new) <- colnames(df_new) %>%"
"0","  str_replace(""judge01"", str_to_lower(judge01)) %>%"
"0","  str_replace(""judge02"", str_to_lower(judge02))"
"0",""
"0","return(df_new)"
"0","}"
"0",""
"0","# applying function to D'Amato and Lee"
"0","Dam_Lee <- judges %>% compare(""D'Amato"", ""Lee"")"
"0",""
"0","# once again, printing out but making it simpler for the student."
"0","Dam_Lee %>%"
"0","  select(-ends_with(c(""perc"", ""dev"")), -date, -event, -arena, -city, -fighter1, -fighter2, -result_type, -rounds, -agreement, -winner) %>%"
"0","  slice(1:20) %>%"
"0","  relocate(winner2, .after = lee_out) %>%"
"0","  flextable() %>%"
"0","  align(align = ""center"", part = ""all"")"
