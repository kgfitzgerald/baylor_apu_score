"0","# rename ref into judge for continuity"
"0","decisions0 <- decisions00 %>%"
"0","  rename(judge1 = ref1,"
"0","         judge1_score = ref1_score,"
"0","         judge2 = ref2,"
"0","         judge2_score = ref2_score,"
"0","         judge3 = ref3,"
"0","         judge3_score = ref3_score)"
"0",""
"0",""
"0","# create bad-score strings"
"0","bad_strings <- c(""NA"", ""0 - 0"", ""0 - 1"", ""1 - 0"")"
"0",""
"0","# converting decision dates"
"0","decisions <- decisions0 %>%"
"0","  mutate(date = mdy(date)) %>%"
"0","  arrange(date) %>% "
"0","  "
"0","# filtering after May 4, 2001"
"0","  filter(date >= as.Date('2001-05-04')) %>%"
"0","  "
"0","# removing bad scores on the decision table"
"0","  mutate("
"0","    error_detect = str_detect(judge1_score, paste(bad_strings, collapse = ""|"")) +"
"0","      str_detect(judge2_score, paste(bad_strings, collapse = ""|"")) +"
"0","      str_detect(judge3_score, paste(bad_strings, collapse = ""|""))"
"0","    ) %>%"
"0","  filter(error_detect == 0) %>%"
"0","  select(-error_detect) %>%"
"0","  "
"0","# separating scores into their own columns"
"0","  separate(col = judge1_score, into = c('judge1_score1', 'judge1_score2'), sep = '-') %>%"
"0","  separate(col = judge2_score, into = c('judge2_score1', 'judge2_score2'), sep = '-') %>%"
"0","  separate(col = judge3_score, into = c('judge3_score1', 'judge3_score2'), sep = '-') %>%"
"0","  mutate(across(ends_with(""score1""), as.numeric),"
"0","         across(ends_with(""score2""), as.numeric),"
"0","         "
"0","# separating out fighter's last names"
"0","         outcome = if_else(str_detect(result, ""drew with""), ""draw"", ""defeat""))"
"0",""
"0","# creating df for defeats"
"0","decision_defeat <- decisions %>%"
"0","  filter(outcome == ""defeat"") %>%"
"0","  separate_wider_delim(result, delim = ""def."", names = c(""fighter1"", ""fighter2""))"
"0",""
"0","# creating df for draws"
"0","decision_draws <- decisions %>%"
"0","  filter(outcome == ""draw"") %>%"
"0","  separate_wider_delim(result, delim = ""drew with"", names = c(""fighter1"", ""fighter2""))"
"0",""
"0","# combining dfs and removing extra spaces"
"0","decisions <- bind_rows(decision_defeat, decision_draws) %>%"
"0","  mutate(fighter1 = str_trim(fighter1, side = ""right""),"
"0","         fighter2 = str_trim(fighter2, side = ""left"")) %>%"
"0","  arrange(date)"
"0",""
"0","# randomly determine who is fighter 1 and fighter 2, so that all the winners aren't fighter 1."
"0","{set.seed(1234)"
"0","decisions <- decisions %>%"
"0","  mutate("
"0","    winner = if_else(outcome == ""defeat"", fighter1, outcome),"
"0","    switch = runif(n()),"
"0","    sp_fighter = fighter1,"
"0","    sp1_score = judge1_score1,"
"0","    sp2_score = judge2_score1,"
"0","    sp3_score = judge3_score1,"
"0","    fighter1 = if_else(switch > .5, fighter2, fighter1),"
"0","    fighter2 = if_else(switch > .5, sp_fighter, fighter2),"
"0","    judge1_score1 = if_else(switch > .5, judge1_score2, judge1_score1),"
"0","    judge1_score2 = if_else(switch > .5, sp1_score, judge1_score2),"
"0","    judge2_score1 = if_else(switch > .5, judge2_score2, judge2_score1),"
"0","    judge2_score2 = if_else(switch > .5, sp2_score, judge2_score2),"
"0","    judge3_score1 = if_else(switch > .5, judge3_score2, judge3_score1),"
"0","    judge3_score2 = if_else(switch > .5, sp3_score, judge3_score2)) %>%"
"0","  select(-sp_fighter, -sp1_score, -sp2_score, -sp3_score, -switch, -outcome) %>%"
"0","  mutate(winner2 = case_when(fighter1 == winner ~ ""fighter1"","
"0","                             fighter2 == winner ~ ""fighter2"","
"0","                             .default = ""draw""))"
"0","}"
"0",""
"0","# creating margins and percentages"
"0","decisions <- decisions %>%"
"0","  mutate("
"0","    judge1_margin = judge1_score1 - judge1_score2,"
"0","    judge2_margin = judge2_score1 - judge2_score2,"
"0","    judge3_margin = judge3_score1 - judge3_score2,"
"0","    judge1_perc = percent(1 - (judge1_score1 / judge1_score2), accuracy = .01),"
"0","    judge2_perc = percent(1 - (judge2_score1 / judge2_score2), accuracy = .01),"
"0","    judge3_perc = percent(1 - (judge3_score1 / judge3_score2), accuracy = .01)) %>%"
"0",""
"0","# filtering out fights with fewer than 3 rounds."
"0","  filter(judge1_score1 + judge1_score2 > 50) %>%"
"0",""
"0","# categorizing the number of rounds in a match  "
"0","  mutate(rounds = case_when("
"0","    judge1_score1 > 50 ~ 12,"
"0","    judge1_score1 > 30 ~ 5,"
"0","    .default = 3))"
"0",""
"0","# creating outcome, deviation, and agreement variables"
"0","decisions <- decisions %>%"
"0","  mutate("
"0","    judge1_dev = abs(judge1_margin - (judge2_margin + judge3_margin)/2),"
"0","    judge2_dev = abs(judge2_margin - (judge1_margin + judge3_margin)/2),"
"0","    judge3_dev = abs(judge3_margin - (judge1_margin + judge2_margin)/2),"
"0","    judge1_out = case_when("
"0","      judge1_margin > 0 ~ ""fighter1"","
"0","      judge1_margin == 0 ~ ""draw"","
"0","      judge1_margin < 0 ~ ""fighter2""),"
"0","    judge2_out = case_when("
"0","      judge2_margin > 0 ~ ""fighter1"","
"0","      judge2_margin == 0 ~ ""draw"","
"0","      judge2_margin < 0 ~ ""fighter2""),"
"0","    judge3_out = case_when("
"0","      judge3_margin > 0 ~ ""fighter1"","
"0","      judge3_margin == 0 ~ ""draw"","
"0","      judge3_margin < 0 ~ ""fighter2""),"
"0","    agreement = case_when("
"0","      judge1_out == judge2_out & judge1_out == judge3_out ~ ""Agree"","
"0","      judge1_out != judge2_out & judge1_out != judge3_out & judge2_out != judge3_out ~ ""Disagree"","
"0","      judge1_out != judge2_out & judge1_out == judge3_out ~ ""judge2"","
"0","      judge1_out != judge2_out & judge2_out == judge3_out ~ ""judge1"","
"0","      judge1_out != judge3_out & judge1_out == judge2_out ~ ""judge3"")) %>%"
"0","  "
"0","# changing format of judges' names. This way they're not yelling the names at me."
"0","  mutate("
"0","    judge1 = str_to_title(judge1),"
"0","    judge2 = str_to_title(judge2),"
"0","    judge3 = str_to_title(judge3),"
"0","    judge1 = recode(judge1,"
"0","                  'D\'amato' = 'D\'Amato'),"
"0","    judge2 = recode(judge2,"
"0","                  'D\'amato' = 'D\'Amato'),"
"0","    judge3 = recode(judge3,"
"0","                  'D\'amato' = 'D\'Amato'))"
