"0","# I couldn't find an R function to calculate the confidence interval, p-value, or kappa of weighted kappa, so I had to calculate it myself. The functions are above."
"0",""
"0","margin_levels <- c(""-5"", ""-4"", ""-3"", ""-2"", ""-1"", ""0"", ""1"", ""2"", ""3"", ""4"", ""5"")"
"0",""
"0","# function that multiplies a row of df a by the corresponding column of df b"
"0","multiply <- function(a, b, x){"
"0","    as.numeric(as.vector(a %>% slice(x) * b[[x]]))}"
"0",""
"0","# function that calculates the weighted effect of each cell. Returns the proportion of agreement. a is the dataframe of values and b is the dataframe of weights"
"0","weights <- function(a, b){"
"0","  Total <- a$Total[12]"
"0","  b <- b %>% select(-""Judge1"")"
"0","  a <- a %>% select(""-5"":""5"")"
"0","  c <- tibble(""Judge"" = DLw_table$""D'Amato""[1:11],"
"0","    multiply(a, b, 1),"
"0","    multiply(a, b, 2),"
"0","    multiply(a, b, 3),"
"0","    multiply(a, b, 4),"
"0","    multiply(a, b, 5),"
"0","    multiply(a, b, 6),"
"0","    multiply(a, b, 7),"
"0","    multiply(a, b, 8),"
"0","    multiply(a, b, 9),"
"0","    multiply(a, b, 10),"
"0","    multiply(a, b, 11)"
"0","  ) %>% adorn_totals(c(""row"", ""col""))"
"0","  prop_agreement <- round(c$Total[12]/Total, 3)"
"0","  return(prop_agreement)}"
"0",""
"0","# this function calculates our kappa from our proportions of agreement. a is our observed agreement and b is our expected agreement."
"0","kappa <- function(Po, Pe) {"
"0","  round((Po - Pe) / (1 - Pe), 2)}"
"0",""
"0","# this function calculates the confidence interval of weighted kappa"
"0","Conf_Int <- function(Po, Pe, n, Conf){"
"0","  st_err <- sqrt((Po*(1 - Po))/(n*(1 - Pe)^2))"
"0","  lower <- round(kappa(Po, Pe) - Conf * st_err, 3)"
"0","  upper <- round(kappa(Po, Pe) + Conf * st_err, 3)"
"0","  Interval <- c(lower, upper) %>% as.vector()"
"0","  return(Interval)}"
"0",""
"0","prop_observed_wq <- DLw_table %>% weights(quadratic_weights)"
"0","prop_expected_wq <- DLw_exp %>% weights(quadratic_weights)"
"0","quadratic_kappa <- kappa(prop_observed_wq, prop_expected_wq)"
"0","quadratic_Conf <- Conf_Int(prop_observed_wq, prop_expected_wq, DLw_table$Total[12], 1.96)"
"0",""
"0","prop_observed_wl <- DLw_table %>% weights(linear_weights)"
"0","prop_expected_wl <- DLw_exp %>% weights(linear_weights)"
"0","linear_kappa <- kappa(prop_observed_wl, prop_expected_wl)"
"0","linear_Conf <- Conf_Int(prop_observed_wl, prop_expected_wl, DLw_table$Total[12], 1.96)"
