{
  "hash": "3b513a09498eed59a955b6cf8d364d08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"American Ninja Warrior - Kaplan-Meier Survival Analysis\"\nauthor:\n  - name: Jonathan Lieb\n    email: jonathan_lieb1@baylor.edu\n    affiliation:\n      - id: bay\n        name: Baylor University\n  - name: Rodney X. Sturdivant\n    affiliation:\n      - ref: bay\ndate: June 4, 2025\nformat:\n  html:\n    grid:\n      margin-width: 350px\ntoc: true\ntoc-location: left\ndescription: Exploring Survival Analysis using the Kaplan-Meier method with American Ninja Warrior data.\ncategories:\n  - Kaplan-Meier\n  - Log Rank test\n  - Nonparametric tests\neditor_options:\n  chunk_output_type: console\ncallout-icon: false\n# embed-resources: true\n---\n\n\n\n::: {.callout-note collapse=\"true\" title=\"Facilitation notes\" appearance=\"minimal\"}\n-   This module would be suitable for an in-class lab or take-home assignment in an intermediate statistics course.\n\n-   It assumes a familiarity with the RStudio Environment and R programming language.\n\n-   Students should be provided with the following data file (.csv) and Quarto document (.qmd) to produce visualizations and write up their answers to each exercise. Their final deliverable is to turn in an .html document produced by \"Rendering\" the .qmd.\n\n    -   <a href=\"anw_2021_stage1.csv\" download>2021 Stage 1 Finals Data</a>\n    -   <a href=\"anw_2023_stage1.csv\" download>2023 Stage 1 Finals Data</a>\n    -   [Student Quarto template](student_template.qmd)\n\n-   [Posit Cloud](https://posit.cloud/) (via an Instructor account) or [Github classroom](https://classroom.github.com) are good options for disseminating files to students, but simply uploading files to your university's course management system works, too.\n\n-   The `anw_2021_stage1.csv` data is derived largely from [americanninjawarriornation.com](https://www.americanninjawarriornation.com/2021/8/30/22639995/american-ninja-warrior-season-13-2021-full-results-from-the-national-finals-stage-one). Additional columns such as `sex` were individually researched and added to the data.\n\n-   The `anw_2023_stage1.csv` data is derived largely from [sasukepedia](https://sasukepedia.fandom.com/wiki/American_Ninja_Warrior_15#Results_11). \n\n:::\n\n# Welcome video\n\n<iframe width=\"560\" height=\"315\" src title=\"placeholder\">\n\n</iframe>\n\n# Introduction\n\nIn this module, you will explore American Ninja Warrior data from the 2021 stage 1 finals through the lens of **survival analysis**. Survival analysis is a statistical method used to analyze the time until an event of interest occurs (often this event is death). In this case, the obstacles will be our time, and the event of interest will be **DEATH** (we're calling failing an obstacle death).\n\n::: column-margin\nAmerican Ninja Warrior Logo ![](American_Ninja_Warrior_Logo.jpg)\n\nImage Source [Wikimedia](https://commons.wikimedia.org/wiki/File:American_Ninja_Warrior_Logo.jpg), Public Domain\n:::\n\nOne of the simplest methods for performing survival analysis is the **Kaplan-Meier method**. This method estimates the survival function, which is the probability that a subject survives past a certain time. The Kaplan-Meier method is non-parametric, meaning it makes no assumptions about the distribution of the survival times. It is a step function that decreases at each event time.\n\n::: {.callout-note title=\"Learning Objectives\" appearance=\"minimal\"}\nBy the end of this module you should be able to:\n\n-   Load data into R\n\n-   Calculate survival estimates using the Kaplan-Meier method\n\n-   Censor data\n\n-   Make survival probability plots\n\n-   Compare survival curves for different groups\n\n-   Perform the log rank test\n\n-   Perform and interpret results from other nonparametric tests\n:::\n\n::: column-margin\n\\\n\\\n\\\n\\\n\n**NOTE**: **R** is the name of the programming language itself and **RStudio** is a convenient interface. To throw even more lingo in, you may be accessing RStudio through a web-based version called **Posit Cloud**. But R is the programming language you are learning :)\n:::\n\n::: {.callout-caution collapse=\"true\" title=\"Research Question\"}\nDuring this lab we will explore the following research questions:\n\n-   What is the probability of a competitor surviving past a certain obstacle?\n-   How do conditional probabilities of survival change as the competitor progresses through the course?\n-   Do survival probabilities differ based on sex?\n:::\n\n# Getting started: American Ninja Warrior data\n\nThe first step to any analysis in R is to **load necessary packages and data**.\n\nRunning the following code will load the `tidyverse`, `survival`, and `survminer` packages and the `anw_2021_stage1` data we will be using in this lab.\n\n::: column-margin\n**TIP**: As you follow along in the lab, you should run each corresponding code chunk in your .qmd document. To \"Run\" a code chunk, you can press the green \"Play\" button in the top right corner of the code chunk in your .qmd. You can also place your cursor anywhere in the line(s) of code you want to run and press \"command + return\" (Mac) or \"Ctrl + Enter\" (Windows).\n:::\n\n::: column-margin\n**TIP**: If you get an error while attempting to load the library or data, you may need to install the package or check the file path. You can install packages using the `install.packages()` function in R. Once you have installed a package, you can load it into your R environment using the `library()` function. If that is not the issue, you may need to check the file path to ensure the data is in the correct location.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\nlibrary(survival)\nlibrary(survminer)\n\n# Load Data\nninja <- read_csv(\"anw_2021_stage1.csv\")\n```\n:::\n\n\n\nWe can use the `glimpse()` function to get a quick look at our `ninja` data. The dimensions of the dataset, the variable names, and the first few observations are displayed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ninja)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 69\nColumns: 5\n$ name            <chr> \"Meagan Martin\", \"DeShawn Harris\", \"Heather Weissinger…\n$ sex             <chr> \"F\", \"M\", \"F\", \"M\", \"F\", \"F\", \"M\", \"M\", \"M\", \"F\", \"F\",…\n$ obstacle        <chr> \"Slide Surfer\", \"Slide Surfer\", \"Swinging Blades\", \"Sw…\n$ obstacle_number <dbl> 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, …\n$ cause           <chr> \"Fall\", \"Fall\", \"Fall\", \"Fall\", \"Fall\", \"Fall\", \"Fall\"…\n```\n\n\n:::\n:::\n\n\n\nUse the `head()` function to view the first few rows of the dataset better.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ninja)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  name               sex   obstacle        obstacle_number cause\n  <chr>              <chr> <chr>                     <dbl> <chr>\n1 Meagan Martin      F     Slide Surfer                  1 Fall \n2 DeShawn Harris     M     Slide Surfer                  1 Fall \n3 Heather Weissinger F     Swinging Blades               2 Fall \n4 Cam Baumgartner    M     Swinging Blades               2 Fall \n5 Brittney Durant    F     Swinging Blades               2 Fall \n6 Casey Rothschild   F     Swinging Blades               2 Fall \n```\n\n\n:::\n:::\n\n\n\n::: {.callout-note title=\"Exercise 1: Data Structure\"}\na.  How many **observations** are in the dataset?\n\nb.  How many **variables** are in the dataset?\n\nc.  Which **variable** should be used as the time variable in the survival analysis?\n:::\n\n::: column-margin\n\\\n**TIP:** Type your answers to each exercise in the student_template.qmd document. You can rename this file using your own name.\\\n:::\n\n## Terms to know\n\nBefore proceeding with the survival analysis, let's make sure we understand American Ninja Warrior and some of it's vocabulary to help us climb our way through this lab.\n\n#### How does American Ninja Warrior work?\n\nAmerican Ninja Warrior is an NBC competition show where participants attempt to complete a series of **obstacle courses** of increasing difficulty. In a single **obstacle course**, the competitors must complete a series of obstacles in a row. If they fail an **obstacle** (usually this happens when they fall into the water below), they are eliminated from the competition. The competitors also have a time limit to complete the course. The competitors are ranked based on how far they get in the course and how quickly they complete it.\n\nMost of the obstacles are designed to test the competitors' upper body strength. Some obstacles require balance and agility though.\n\n::: column-margin\nThe warped wall is arguably the most famous, although now least difficult, obstacle on an American Ninja Warrior course. The warped wall is a curved wall that competitors must run up and grab the top of. The warped wall is on every course and is often the final obstacle, although this is not the case on the Finals courses.\n\nThe warped wall was previously 14 feet and is now 14.5 feet tall. They have even had a 18 foot warped wall on the show.\n\n![Warped Wall ](Warped_Wall.jpg)\n\nImage Source: <a href=\"https://commons.wikimedia.org/wiki/File:American_Ninja_Warrior_city_finals_course_Indianapolis_2016.jpg\">Dustin Batt</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.0\">CC BY-SA 2.0</a>, via Wikimedia Commons\n\n:::\n\nThe obstacles in American Ninja Warrior are all given names. For example, the famed **Warped Wall** is a curved wall that competitors must run up and grab the top of. The **Salmon Ladder** is a series of rungs that competitors must move up by jumping and pulling themselves up.\n\nWatch Enzo Wilson complete the American Ninja Warrior course at the 2021 Finals Stage 1 (Season 13) in the video below.\n\n\n\n{{< video https://www.youtube.com/embed/kYXFjANBHl4 >}}\n\n\n\n\n::: callout-important\n#### Key Terms\n\n-   **Obstacle**: A challenge that competitors must complete to move on in the competition.\n\n-   **Course**: A series of obstacles that competitors must complete in a row. A typical course has 6-10 obstacles.\n\n-   **Stage**: A round of the competition. The competition starts with Stage 1 and progresses to Stage 4.\n\n-   **Time Limit**: The amount of time competitors have to complete the course, often between 2-4 minutes.\n:::\n\n## Variable Descriptions\n\nThe `ninja` data you'll be analyzing in this lab provides the individual run information for each ninja in the 2021 Finals Stage 1 (Season 13). The data includes the ninja's name, their sex, the obstacle they failed on, and the cause of that failure.\n\n\n| Variable          | Description                                        |\n|-------------------|----------------------------------------------------|\n| `name`            | Name of the American Ninja Warrior                 |\n| `sex`             | Sex of the American Ninja Warrior (M/F)            |\n| `obstacle`        | The name of the obstacle the ninja fell on or the last obstacle they completed if they ran out of time or finished the course     |\n| `obstacle_number` | The obstacle's place in the run                    |\n| `cause`           | What caused the ninja to fail (Fall/Time/Complete) |\n\n\n::: column-margin\n\n**Note**: It is important to recognize that if the competitor fell on the \n7th obstacle the obstacle number is 7. However, if the competitor ran out of time on the 7th obstacle, the obstacle number is 6, since the 6th obstacle was the last time that we could say they either fell or completed an obstacle. This will be important for **censoring** later. If the competitor completed the course, the obstacle number is set to the last obstacle they completed, which is the 9th obstacle in the 2021 Finals Stage 1 course.\n\n:::\n\n\n## Points of Confusion\n\nUse the following code to create a table of the obstacle names and their corresponding obstacle numbers. This will help you understand the order of the obstacles in the course.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja |> \n  distinct(obstacle, obstacle_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   obstacle        obstacle_number\n   <chr>                     <dbl>\n 1 Slide Surfer                  1\n 2 Swinging Blades               2\n 3 Double Dipper                 3\n 4 Jumping Spider                4\n 5 Tire Run                      5\n 6 Dipping Birds                 7\n 7 Warped Wall                   6\n 8 The High Road                 8\n 9 Fly Hooks                     8\n10 Cargo Net                     9\n```\n\n\n:::\n:::\n\n\n\nIt can be seen quickly that there are 2 obstacles with number 8. The duplicate obstacle number 8 is due to the fact that Stage One of the 2021 Finals allowed a **split-decision**. This means that competitors could choose between two different obstacles for obstacle 8.\n\n::: column-margin\nRead about the 2021 Stage 1 Split Decision [here](https://www.americanninjawarriornation.com/2021/9/21/22686483/american-ninja-warrior-season-13-2021-national-finals-stage-one-split-decision).\n:::\n\nAdditionally, one competitor **Joe Moravsky** ran the course twice (falling the first time and completing it the second time). This is because he was the **Safety Pass Winner** from the previous round. The Safety Pass allows a competitor to run the course again if they fail the first time. This poses some questions about how to handle this observation. We could \n\na. Include both runs in the analysis, treating them as separate observations.\n\nb. Include only the first run in the analysis.\n\nc. Include only the second run in the analysis.\n\nIf we include the second run in the analysis, we are neglecting the fact that Joe Moravsky had already attempted the course once and may have learned from his mistakes. \n\nIf we include the first run in the analysis, an argument could be made that Moravsky only failed the first time because he knew he had a second chance.\n\nIn most survival analysis situations, an individual would not be capable of participating twice from the beginning (after all if death were truly the event of interest, it would be safe to say there is no second chance). Therefore, we will only include the first run in the analysis.\n\nRun the code below to remove the second run from the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja <- ninja |> \n  filter(name != \"Joe Moravsky (Safety Pass)\")\n```\n:::\n\n\n\nNow that we've cleared some of the muddiness, let's move on to the fun stuff!\n\n# Kaplan-Meier Survival Analysis\n\nBinary outcome data (life/death, success/failure) is common in many settings.  As an example, the Worcester Heart Attack Study involves patients hospitalized with acute myocardial infarction (AMI, essentially a heart attack).  Many outcomes have been analyzed for this data, but suppose we were interested in the event of a second heart attack.  We could choose a date after the initial hospitalization, such as 1 year, and examine the probability the subjects have had a second heart attack at that time point.  The event would be binary (1 = had second heart attack in first year, 0 = did not have a second heart attack).\n\nThe one year analysis ignores an important aspect of the data, the actual time until a second heart attack occurs. For example, if we are interested in comparing two treatments and those on treatment A average 5 years longer until a second heart attack, that would be useful information.  \n\nSurvival analysis is an approach to such **time-to-event** data.  Primary interest is in the **survival function** which gives the probability of surviving longer than a time, $t$:\n\n$$S(t) = P(T > t)$$ \n\nwhere **T** is the event (in our example the 2nd heart attack) and **t** is the time (in years for our example).\n\n## Censored Data\n\nIn survival analysis, we often need to **censor data**. Censored data occurs when the **event of interest** has not occurred for some of the observations.  For the heart attack example, suppose we follow subjects for 10 years.  It is not unlikely that some will not have a second heart attack in that time.  It is also possible that we are unable to follow all subjects for the full 10 years.  Such data is **censored**.  We have information that the person did not have a second heart attack for a certain amount of time, but we do not have information beyond that time.\n\nWe could, of course, just exclude these observations and use only those who had a second heart attack.  The problem is that this creates potential **bias**.  Suppose those who had treatment A do not have a second heart attack as quickly.  More in that group might not have a heart attack in the 10 years.  By excluding them we would bias our estimate of the average time until a heart attack for this group to be shorter than it actually is.\n\n## Introducing Survival Analysis using American Ninja Warrior Data\n\nIn the heart attack study, we have two key variables. One is the time each subject is observed $t$ = years, which we suppose are only integer values 1, 2, 3,...(technically this would be **interval censored** data but we will not explore this more advanced topic here).  The second is the **censoring variable** $c_i$, which tells us if we observed the event $c_i = 1$ or not $c_i = 0$.\n\nOur data for two subjects might look like:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-9d8f0322{}.cl-9d873aac{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-9d8947ca{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-9d895b52{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9d895b5c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9d895b5d{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-9d8f0322'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-9d895b52\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">Subject</span></p></th><th class=\"cl-9d895b52\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">Time</span></p></th><th class=\"cl-9d895b52\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">Censor</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9d895b5c\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">1</span></p></td><td class=\"cl-9d895b5c\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">8</span></p></td><td class=\"cl-9d895b5c\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">1</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9d895b5d\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">2</span></p></td><td class=\"cl-9d895b5d\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">10</span></p></td><td class=\"cl-9d895b5d\"><p class=\"cl-9d8947ca\"><span class=\"cl-9d873aac\">0</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nWe see that subject 1 was observed for 8 years and had a heart attack at year 8.  Subject 2, on the other hand, was observed for the full 10 years and did not have a heart attack.\n\nTo illustrate survival analysis for the ANW data, we will define the time using the obstacle number.  So, instead of time $t = 0, 1, 2,...$ years we will have time $n = 0, 1, 2, 3,...$ obstacles.  Note that there is an actual time element to the obstacle course, but for the purpose of learning survival analysis our time is the obstacle number.  \n\nThe event of interest is the **failure of a competitor on an obstacle**.  This is important as it is possible to fail the course itself, for stage 1, if the allotted time expires.  However, that is not the outcome of interest here.\n\nAs with the heart attack example, there are several ways in which the data might be **censored**.  If a competitor completes the course, we do not know how many obstacles they would complete before the event (failing an obstacle) would occur.  This is similar to the case where a subject was followed for 10 years without a heart attack; our subject was followed for 9 obstacles (our time variable) without failing an obstacle.\n\nAn additional possible censoring occurs if the time limit is reached.  Again, if that occurs we do not know how many obstacles the competitor would complete before failing one, although we do know that they didn't fail on any of the ones they completed before time was up. In the heart attack study this would be similar to a case where we observed a subject for 6 years and they died due to some other cause but never had a heart attack.\n\n::: column-margin\n\n**Note**: Another advanced survival model involves analyzing \"competing risks\" if interest is in multiple different outcomes such as death from a heart attack or death from some other cause. In the ANW case, failing an obstacle or running out of time would be competing risks. We will not explore this topic here.\n\n:::\n\nUse the code below to create a new column called `censor` in the `ninja` data that is a binary indicator of whether or not the observation should be censored. This column will be used to indicate whether the data is censored or not.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Makes a column called censor that is 1 if the competitor failed and 0 if they completed the course or ran out of time\nninja <- ninja |> \n  mutate(censor = if_else(cause %in%  c(\"Complete\", \"Time\"), 0, 1))\n```\n:::\n\n\n\nThree competitors in the resulting data are:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-9db171f0{}.cl-9dacf5a8{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-9daec072{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-9daec07c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-9daed2e2{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9daed2ec{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9daed2ed{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9daed2f6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9daed2f7{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9daed300{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-9db171f0'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-9daed2e2\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">name</span></p></th><th class=\"cl-9daed2e2\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">sex</span></p></th><th class=\"cl-9daed2e2\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">obstacle</span></p></th><th class=\"cl-9daed2ec\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">obstacle_number</span></p></th><th class=\"cl-9daed2e2\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">cause</span></p></th><th class=\"cl-9daed2ec\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">censor</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Meagan Martin</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">F</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Slide Surfer</span></p></td><td class=\"cl-9daed2f6\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">1</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Fall</span></p></td><td class=\"cl-9daed2f6\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">1</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Sean Bryan</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">M</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Cargo Net</span></p></td><td class=\"cl-9daed2f6\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">9</span></p></td><td class=\"cl-9daed2ed\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Complete</span></p></td><td class=\"cl-9daed2f6\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">0</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9daed2f7\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Brett Sims</span></p></td><td class=\"cl-9daed2f7\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">M</span></p></td><td class=\"cl-9daed2f7\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Fly Hooks</span></p></td><td class=\"cl-9daed300\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">8</span></p></td><td class=\"cl-9daed2f7\"><p class=\"cl-9daec072\"><span class=\"cl-9dacf5a8\">Time</span></p></td><td class=\"cl-9daed300\"><p class=\"cl-9daec07c\"><span class=\"cl-9dacf5a8\">0</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nWe can interpret this data:\n\n\n- Meaghan Martin failed on the first obstacle so the time (obstacle_number) is 1 and censor = 1.  \n- Sean Bryan completed the course so the obstacle_number is 9 but censor = 0. We do not know how many obstacles Sean completes before failing one; he moved on to the second stage course but we did not collect data after the first stage.  He was censored due to the \"study time\" of 9 obstacles.\n- Brett Sims ran out of time while on the 9th obstacle.  We know he completed 8 obstacles so his \"time\" is obstacle_number = 8 but we do not know if he would have failed the 9th obstacle or not (or any further obstacles) so his observation is censored.\n\n\n## Estimating the  Survival Function using Kaplan-Meier\n\nThe Kaplan-Meier estimator uses information from all of the observations in the data to provide a **non-parametric** estimate of the survival function. The estimator considers survival to a certain point in time as a series of steps defined at the observed times.\n\nIn order to calculate the probability of surviving past a certain point in time (past a certain obstacle in this case), the conditional probability of surviving past that point given that the competitor has survived up to that point must be calculated first.\n\nThe formula for the conditional probability of surviving past a point in time ($t_i$) given that the competitor has survived up to that point in time($t_{i-1}$) is:\n\n::: column-margin\n**Note**: This function could also be written as $P(T > t_i | T \\geq t_{i-1}) = \\frac{n_i - d_i}{n_i}$\n:::\n\n$P(T \\geq t_i | T \\geq t_{i-1}) = 1- \\frac{d_i}{n_i}$\n\nWhere:\n\n- $d_i$ is the number of competitors that failed at time $t_i$\n\n- $n_i$ is the number of competitors that were at risk at time $t_i$\n\nThe Kaplan-Meier estimator is the product of the conditional probabilities of surviving past each point in time up through that point in time.\n\n$\\hat{S}(t) = \\prod_{t_i \\leq t} (1 - \\frac{d_i}{n_i})$\n\n::: column-margin\n**Note**: Censored data does not count in the at risk competitors\n:::\n\nwhere $n_i = n_{i-1} - d_{i-1} - c_{i-1}$\n\n- $c_i$ is the number of competitors censored at time $t_i$\n\nFor example, we create a data set with 25 competitors and 5 obstacles:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Setting a seed for reproducibility\nset.seed(123)\n\n# Creating fake data\nfake_data <- tibble(obstacle_number = c(1:5, 2,5), censor = c(rep(1, 5), rep(0, 2))) |> \n  sample_n(25, replace = TRUE)\n\nhead(fake_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  obstacle_number censor\n            <dbl>  <dbl>\n1               5      0\n2               5      0\n3               3      1\n4               2      0\n5               3      1\n6               2      1\n```\n\n\n:::\n:::\n\n\n\nEach row of the data is a competitor ($i = 1,...,25$) and the first column (\"obstacle_number\") is the last obstacle for which each was observed.  The \"censor\" variable is the indicator of whether the obstacle was failed (1 = failed).\n\nWe will step through a few calculations to illustrate the Kaplan-Meier (KM) estimator. The calculation is easiest if the data is put in a format by the obstacle number (time) when things occurred.  The code below produces this format:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfake_data_summary <- fake_data |> \n  group_by(obstacle_number) |> \n  summarize(fails = sum(censor == 1),\n            censored = sum(censor == 0)) |>\n  ungroup() \n\nfake_data_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  obstacle_number fails censored\n            <dbl> <int>    <int>\n1               1     4        0\n2               2     3        4\n3               3     7        0\n4               4     2        0\n5               5     3        2\n```\n\n\n:::\n:::\n\n\n\nWe see that each obstacle (time) had events.  For the first obstacle, these events were all failures (4 fell). At obstacle 2, there were 3 failures but 4 censored.  The censored competitors ran out of time before they could either complete or fail obstacle 3. We similarly see failures and censored observations at the last obstacle. Those censored at the last obstacle were those who completed the course.\n\nSuppose we wanted to calculate the Kaplan-Meier estimate of surviving past obstacle 2 we would need to find the following probabilities:\n\n$P(T > 1 | T > 0) = P(T > 1) =  1 - \\frac{\\text{number of competitors that failed at obstacle 1}}{\\text{number of competitors that attempted obstacle 1}}$\n\n$P(T > 2 | T > 1) = 1 - \\frac{\\text{number of competitors that failed at obstacle 2}}{\\text{number of competitors that attempted obstacle 2}}$\n\nBelow we calculate the first probability:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfake_data_summary <- fake_data_summary |> \n  mutate(at_risk = c(25,rep(NA,4)),\n         p_surv_cond = (at_risk - fails)/at_risk,\n         p_surv_km = p_surv_cond*1)\n\nfake_data_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  obstacle_number fails censored at_risk p_surv_cond p_surv_km\n            <dbl> <int>    <int>   <dbl>       <dbl>     <dbl>\n1               1     4        0      25        0.84      0.84\n2               2     3        4      NA       NA        NA   \n3               3     7        0      NA       NA        NA   \n4               4     2        0      NA       NA        NA   \n5               5     3        2      NA       NA        NA   \n```\n\n\n:::\n:::\n\n\n\nWe compute the probability using the formula earlier:\n\n$P(T > t_i | T \\geq t_{i-1}) = \\frac{n_i - d_i}{n_i}$\n\nWe create a column for the number at risk ($n_1$) which is 25 for the first obstacle.  $d_i$ is found already in the \"fails\" column.  \n\nIn order to compute the second probability, we need to compute the next at risk value, $n_2$.  This value is 25 minus the 4 failures or 21.  Since 0 were censored, we do not lose any other competitors.  From there, we can again compute the conditional probability using the formula:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfake_data_summary <- fake_data_summary |> \n  mutate(at_risk = c(25, 21, rep(NA,3)),\n         p_surv_cond = (at_risk - fails)/at_risk)\n\nfake_data_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  obstacle_number fails censored at_risk p_surv_cond p_surv_km\n            <dbl> <int>    <int>   <dbl>       <dbl>     <dbl>\n1               1     4        0      25       0.84       0.84\n2               2     3        4      21       0.857     NA   \n3               3     7        0      NA      NA         NA   \n4               4     2        0      NA      NA         NA   \n5               5     3        2      NA      NA         NA   \n```\n\n\n:::\n:::\n\n\n\nFinally, we then need to multiply these two probabilities together to get the Kaplan-Meier estimate of surviving past obstacle 2.\n\n$P(T > 2) = P(T > 1) * P(T > 2 | T > 1)$\n\nThe following code calculates the Kaplan-Meier estimate of surviving past obstacle 2:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfake_data_summary$p_surv_km[2] <- fake_data_summary$p_surv_cond[1]*\n  fake_data_summary$p_surv_cond[2]\nfake_data_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  obstacle_number fails censored at_risk p_surv_cond p_surv_km\n            <dbl> <int>    <int>   <dbl>       <dbl>     <dbl>\n1               1     4        0      25       0.84       0.84\n2               2     3        4      21       0.857      0.72\n3               3     7        0      NA      NA         NA   \n4               4     2        0      NA      NA         NA   \n5               5     3        2      NA      NA         NA   \n```\n\n\n:::\n:::\n\n\n\nThe Kaplan-Meier estimate of surviving past obstacle 2 in this fake example is 0.72.\n\n\n::: {.callout-note title=\"Exercise 2: Fake Data Kaplan-Meier Estimates\"}\n\nIn this exercise you will calculate the remaining three Kaplan-Meier estimates of surviving past each obstacle for the fake data.  **Important note:  how many are at risk for the next obstacle (3) in the table?  21 attempted obstacle 2 and three failed.  However, 4 ran out of time and were censored!  Thus, the correct number at risk, $n_3$ is $21 - 7 = 14$!** Use this value to help you complete the table.\n\n:::\n\n\n## Kaplan-Meier Estimator Manual Calculation\n\nThe `ninja` data frame contains information about individual competitors in the ninja competition. We will need to summarize the data to calculate the Kaplan-Meier estimator manually.\n\n::: {.callout-note title=\"Exercise 3: Manual Calculation of Kaplan-Meier Estimator\"}\nIn this exercise you will calculate the Kaplan-Meier estimator of surviving past each obstacle in the ninja competition step-by-step.\n\n::: {.callout-note title=\"Part 1: Number of Events\"}\nThe first step is to calculate the number of competitors that failed and the number of competitors that were censored at each point in time. These are the $d_i$ and $c_i$ values needed to calculate the conditional probability of surviving past each point in time.\n\nUse the following code to sum the number of competitors that failed and the number of competitors that were censored at each obstacle.\n\n::: column-margin\n<br><br><br><br><br><br><br>\n**Note**: The censored column is the number of competitors that were not tracked after that obstacle. For any obstacle that is not the last one, the number censored are the amount that ran out of time on the next obstacle. For the last obstacle, the number censored are the competitors that completed the course.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_summary <- ninja |> \n  group_by(obstacle = obstacle_number) |>\n  summarize(fails = sum(cause == \"Fall\"),\n            censored = sum(cause %in% c(\"Complete\", \"Time\")))\n```\n:::\n\n\n\na.  At which **obstacle** did the most competitors fail?\n\nb.  At which **obstacle** were the most competitors censored (not including obstacle 9 which is completion)?\n:::\n\n::: {.callout-note title=\"Part 2: At Risk Competitors\"}\nThe second step is to calculate the number of competitors at risk at each point in time. This is the $n_i$ value needed to calculate the conditional probability of surviving past each point in time.\n\nUse the following code to calculate the number of competitors at risk at each point in time from the `ninja_summary` data frame.\n\n::: column-margin\n<br><br><br><br><br><br><br><br><br><br><br><br><br>\n\n\n**Note**: The `lag` function shifts the `cumsum` of the `fails` column down one row. The `default = 0` argument fills in the first row with 0. This is necessary to help calculate the number of competitors at risk at each obstacle. Note that the `lag` function is not used in conjunction with the `cumsum`function for the `censored` column.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_summary <- ninja_summary |> \n  mutate(attempts = 68 - lag(cumsum(fails), default = 0) - \n           lag(cumsum(censored), default = 0))\n```\n:::\n\n\n\na.  Which **obstacle** had the most competitors at risk?\n\nb.  Why don't **previously censored** competitors contribute to the number of competitors at risk at the obstacle?\n:::\n\n::: {.callout-note title=\"Part 3: Conditional Survival Probability\"}\nThe third step is to calculate the conditional probability of survival at each point in time. This is the $P(T \\geq t_i | T \\geq t_{i-1})$ value needed to calculate the Kaplan-Meier estimator and is calculated as $1 - \\frac{d_i}{n_i}$ or 1 minus the conditional \"failure probability\".\n\na.  Use the `ninja_summary` data frame to calculate the probability that someone survives each obstacle. Do this using the `mutate` function to create a new column called `surv_prob`. Survival probability is 1 minus the number of competitors that failed divided by the number of competitors at risk. **Save this data frame as `ninja_summary`**.\n\n::: column-margin\n<br><br><br><br><br><br><br><br><br><br>\n**TIP**: You can pipe the data frame into the `mutate` function to create a new column.\n\n**TIP**: The `mutate` function works like so: `data_frame |> mutate(new_column = calculation)`\n:::\n\n\n\n\n\n\n\nb.  What **percentage** of at-risk competitors **survived** the first obstacle?\n\nc.  What **percentage** of at-risk competitors **failed** the fifth obstacle?\n\nd.  Which obstacle had the **highest** conditional **fail** probability?\n\ne.  Did **obstacle 2** or **obstacle 7** have a higher conditional **survival** rate?\n:::\n\n::: {.callout-note title=\"Part 4: Kaplan-Meier\"}\nThe final step is to calculate the Kaplan-Meier estimator of surviving past each point in time ($\\hat{S}(t)$) This is calculated as the product of the conditional probabilities of surviving past each point in time up through the desired point in time ($\\prod_{i=1}^{t} P(T \\geq t_i | T \\geq t_{i-1})$).\n\nUse the following code to calculate the Kaplan-Meier estimator manually by multiplying the conditional probabilities of surviving past each point in time up through the desired point in time.\n\n::: column-margin\n<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n**Note**: The `cumprod` function calculates the cumulative product of the values given to it.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_summary <- ninja_summary |> \n  mutate(km = cumprod(surv_prob))\n```\n:::\n\n\n\na.  What is the Kaplan-Meier estimate for surviving past the **first obstacle**?\n\nb.  What is the Kaplan-Meier estimate for surviving past first **five obstacles**?\n\nc.  What is the farthest obstacle that for which the Kaplan-Meier estimator has more **50%** of competitors surviving?\n:::\n\n#### Plotting the Kaplan-Meier Estimator\n\nWe will now use `ggplot2` to plot the Kaplan-Meier estimator for the ninja competitors. The Kaplan-Meier estimator is a step function, so we will use `geom_step` to plot the estimator. We will also use `geom_point` to plot the points where the estimator changes.\n\n::: column-margin\n<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\nType `?geom_step`, `?geom_point`, or `?ggplot` in the console to learn more about these functions.\n:::\n\n::: {.callout-note title=\"Part 5: Plotting the Kaplan-Meier Estimator\"}\n::: column-margin\n**TIP**: Remember that you can add the `+` operator to continue adding layers to the plot like seen below\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(your_data, aes(x = time_var, y = kaplan_meier_var)) +\n  geom_step() +\n  geom_point()\n```\n:::\n\n\n\n**TIP**: You can also add labels to the plot using the `labs` function like seen below\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(your_data, aes(x = time_var, y = kaplan_meier_var)) +\n  geom_step() +\n  geom_point() +\n  labs(title = \"Your Title\",\n       x = \"X Axis Label\",\n       y = \"Y Axis Label\")\n```\n:::\n\n\n:::\n\na.  Use the `ninja_summary` data frame in conjunction with `ggplot2`'s `geom_step` and `geom_point` to plot the Kaplan-Meier estimator for the ninja competitors.\n\nb.  Comment on the plot.\n\nc.  What do you notice about where the lowest point on the plot is in regard to **survival probability**? Does **survival probability** reach zero? Why or why not?\n:::\n:::\n\n## Using R Packages to Automatically Calculate the Kaplan-Meier Estimator\n\nPhew! That was a lot of tedious work to calculate and plot the Kaplan-Meier estimator manually. Luckily, there is a much easier way to calculate the Kaplan-Meier estimator using R.\n\nThe `survival` package in R provides a function called `survfit` that can be used to calculate the Kaplan-Meier estimator. The `survfit` function requires a `Surv` object as input. The `Surv` object is created using the `Surv` function, which requires two arguments:\n\n1.  The time to event data. The time to event data is the time at which the event occurred or the time at which the individual was censored. **In our case this is the `obstacle_number` in our `ninja` data.**\n\n2.  The event status. The event status is a binary variable that indicates whether the event occurred or the individual was censored. The event status is coded as 1 if the event occurred and 0 if the individual was censored. **This is contained in the `censor` column of the `ninja` data.**\n\nBelow a survfit model is created for the `ninja` dataset and the results are stored in the `ninja_km` object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_km <- survfit(Surv(obstacle_number, censor) ~ 1, data = ninja)\n```\n:::\n\n\n\n::: {.callout-note title=\"Exercise 4: Kaplan-Meier Estimates and Interpretation\"}\nUse `summary(ninja_km)` to view a summary of the Kaplan-Meier estimator.\n\na.  Do the values in the **survival** column match the values you calculated manually?\n\n::: column-margin\nThe computations for calculating the Confidence Interval for the K-M Estimate are fairly complex. The method most commonly used is called the **log-log survival function** and was proposed by Kalbfleisch and Prentice (2002). This function is computed by $ln(-ln[\\hat{S}(t)])$ with variance derived from the delta method and calculated by $$\n\\frac{1}{[ln(\\hat{S}(t))]^2}\\sum_{t_i\\leq{t}}\\frac{d_i}{n_i(n_i - d_i)} \n$$.\n\nThe endpoints for the confidence interval for the **log-log survival function** are therefore found by $ln(-ln[\\hat{S}(t)]) \\pm Z_{1-\\alpha / 2} SE [ln(-ln[\\hat{S}(t)]) ]$\n\nAnd the endpoints expressed by the computer and seen in the summary are $exp[-exp(\\hat{c}_u)] \\text{ and } exp[-exp(\\hat{c}_l)]$\n:::\n\nThe output also shows the **95% confidence intervals**.\n\nb.  Which **obstacle number** is the first point in time where a survival rate of **less than .5** falls within the **95% confidence interval**?\n\nc.  What do you notice about the **standard error** as the time increases and more ninjas have been eliminated?\n:::\n\n#### Quartile Interpretation\n\nThe three quartiles are common statistics to look at when doing a survival analysis. The interpretations of these are as follows:\n\n::: column-margin\n**Note**: If the data is uncensored the estimate is just the median of the data. If the data is censored, the KM estimate is used to find these by finding the time at which it drops below the percentile\n:::\n\n1.  **25th Percentile**- 75% of the people survive past this point in time\n\n2.  **Median**- 50% of the people will survive past this time\n\n3.  **75th Percentile**- 25% survive past this time\n\n::: {.callout-note title=\"Exercise 5: Interpreting Quartiles\"}\nUse the results from `quantile(ninja_km)` to answer the following questions\n\na.  What is the **earliest time** that the confidence intervals imply that the true mean of surviving past that time could be **75%**? What is the **latest** time?\n\nb.  What is the **interpretation** of the NA values in the 75th percentile columns?\n\nc.  What is the earliest **time** (within the 95% confidence interval) at which the true survival rate suggests **50%** of the competitors would fail on or before?\n:::\n\n#### Plotting with R\n\nAfter fitting a Kaplan-Meier model, we can use the `ggsurvplot` function from the `survminer` package to plot the Kaplan-Meier estimator. The `ggsurvplot` function requires the Kaplan-Meier model as input.\n\nBelow is an example of how easy it is to plot the Kaplan-Meier estimator using R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsurvplot(ninja_km,\n           conf.int = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n# Kaplan-Meier Estimator by Groups\n\nSometimes we may want to compare the survival probabilities of different groups of individuals. For example, we may want to compare survival probabilities based on age, gender, treatment group, or a variety of other factors.\n\nIn our data set, we have a variable called `sex` that indicates the gender of the competitor. We can use this variable to compare the survival probabilities for males and females.\n\nThe Kaplan-Meier estimator can be calculated for different groups of individuals quite easily in **R**. We simply have to add the variable `sex` to our function in the model to do this.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_km_gender <- survfit(Surv(obstacle_number, \n                                censor)~ sex, data = ninja)\n```\n:::\n\n\n\nA plot can be created to help us compare these groups.\n\n::: column-margin\n**Fun Fact**: Jesse Labreck was the only woman to complete the 2021 American Ninja Warrior Stage 1 Finals Course.\n\nYou can watch her incredible run below {{< video https://www.youtube.com/embed/8KIED3eCNUs >}}\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsurvplot(ninja_km_gender,\n           conf.int = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-note title=\"Exercise 6: Kaplan-Meier Estimates by Group\"}\na.  Which `sex` group has a higher survival probability for most of the time points?\n\nb.  Which `sex` has a wider confidence interval throughout the time points?\n\nc.  Explain why your answer to **b** might be the case.\n:::\n\n## The Log-Rank Test (optional/advanced)\n\nThe Log-Rank Test is a statistical test used to compare the survival probabilities of two or more groups. The test is used to determine if there is a statistically significant difference between the survival probabilities of the groups.\n\nThe hypotheses for our log-rank test are as follows:\n\n-   $H_0: S_M(t) = S_F(t)$ for all $t$\n-   $H_a: S_M(t) \\neq S_F(t)$ for at least one $t$\n\nwhere $S_M(t)$ is the survival probability for males at time $t$ and $S_F(t)$ is the survival probability for females at time $t$.\n\nWhen comparing two groups like this, we can calculate the **expected** number of deaths in each group. Below is the formula for calculating the number of expected deaths for group 0 at time $t_i$:\n\n$$\\hat{e}_{0i} = \\frac{n_{0i}d_i}{n_i}$$\n\nwhere $n_{0i}$ is the number of individuals at risk in group 0 at time $t_i$, $d_i$ is the total number of deaths at time $t_i$, and $n_i$ is the total number of individuals at risk at time $t_i$.\n\nThe **variance** estimator is drawn from the hypergeometric distribution. The formula for the variance of the number of deaths in group 0 at time $t_i$ is:\n\n$$\\hat{v}_{0i} = \\frac{n_{0i}n_{1i}d_i(n_i - d_i)}{n_i^2(n_i - 1)}$$\n\nwhere $n_{0i}$ is the number of individuals at risk in group 0 at time $t_i$, $n_{1i}$ is the number of individuals at risk in group 1 at time $t_i$, $d_i$ is the total number of deaths at time $t_i$, and $n_i$ is the total number of individuals at risk at time $t_i$.\n\nThe **test statistic** is calculated as the square of the sum of the differences between the observed and expected number of deaths for the group divided by the sum of the variance of the number of deaths for the group at each time point. The formula for the test statistic is as follows:\n\n$$Q = \\frac{[\\sum_{i=1}^m (d_{0i} - \\hat{e}_{0i})]^2}{\\sum_{i=1}^m \\hat{v}_{0i}}$$ \n\nUsing the null hypothesis, the p-value can be calculated using the chi-squared distribution with 1 degree of freedom.\n\n$$p = P(X^2(1) > Q)$$\n\n::: column-margin\n**NOTE**: This use of the chi-squared distribution assumes that the censoring is independent of the group.\n:::\n\n::: column-margin\n**NOTE**: The degrees of freedom for the chi-squared distribution is 1 because we are comparing two groups. If we were comparing more than two groups, the degrees of freedom would be the number of groups minus 1. \n:::\n\nThankfully **R** has a built-in function to perform the log-rank test. The `survdiff` function in the `survival` package can be used to perform the log-rank test. The `survdiff` function requires a `Surv` object as input. It will then perform the log-rank test and return the test statistic and p-value.\n\n::: column-margin\n**NOTE**: The **log-rank test** is a non-parametric test. This means that it does not assume that the data is normally distributed.\n:::\n\nThe code below runs the log-rank test on the `ninja` data set to compare the survival of male and female competitors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_km_diff <- survdiff(Surv(obstacle_number,\n                               censor) ~ sex, data = ninja)\n```\n:::\n\n\n\n::: {.callout-note title=\"Exercise 7: Comparing Survival vs. Expected\"}\nUse the code below to see the results of the `survdiff` function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nninja_km_diff\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nsurvdiff(formula = Surv(obstacle_number, censor) ~ sex, data = ninja)\n\n       N Observed Expected (O-E)^2/E (O-E)^2/V\nsex=F 12       10     4.05      8.72      11.1\nsex=M 56       27    32.95      1.07      11.1\n\n Chisq= 11.1  on 1 degrees of freedom, p= 9e-04 \n```\n\n\n:::\n:::\n\n\n\na.  How many **female competitors** are in the data set? How many **fell**? How many were **expected** to fall (round to the nearest whole number)?\n\nb.  Did **more or less** male competitors fall than expected?\n\nc.  What is the **p-value** of the test? What does this mean?\n:::\n\n## Other Nonparametric Tests (optional/advanced)\n\nAlthough the `survdiff` function uses the most common test for comparing Kaplan-Meier curves, there are a variety of other methods that can be used. These other methods developed because of the **log rank test's** greatest weakness: It weights all time points equally even though there are fewer people at risk later than at the beginning. These methods are all similar to a standard log-rank test but attempt to weight time points in order to detect differences better throughout time as opposed to the end, which is where the log-rank test finds most of its differences. The ratio of the observed and expected number of deaths is calculated in a similar manner but with weights applied as seen below:\n\n$$Q = \\frac{[\\sum_{i=1}^m w_i(d_0i - \\hat{e}_{0i})]^2}{\\sum_{i=1}^m w_i^2\\hat{v}_{0i}}$$\n\nBelow some of the other methods that can be used are broken down, with their weighting and purpose explained:\n\n-   Wilcoxon (Gehan-Breslow) Test: This test gives more weight to early time points based on the number of individuals at risk. Its weighting is: $$w_i = n_i$$\n\n-   Tarone-Ware Test: This test gives more weight to time points with more individuals at risk, but less heavily than the Gehan-Breslow test. Its weighting is: $$w_i = \\sqrt{n_i}$$\n\n-   Peto-Prentice Test: This test also gives more weight to earlier time points, but not as much as the Gehan-Breslow test. Its weighting is:\n\n$$w_i = \\tilde{S}(t_{(i)})$$ where $$\\tilde{S}(t_{(i)}) = \\prod_{t_{(j)}<t} \\left(1 - \\frac{d_j}{n_j}\\right)$$\n\n-   Fleming-Harrington Test: This test allows the user to chose $\\rho$ and $q$ values to weight the time points. If $\\rho$ is larger it will weight the earlier time points more heavily, and if $q$ is larger it will weight the later time points more heavily. Its weighting is:\n\n$$w_i = [\\tilde{S}(t_{(i-1)})]^{\\rho}[1 - \\tilde{S}(t_{(i-1)})]^q$$ where $$\\tilde{S}(t_{(i- 1)}) = \\text{Kaplan-Meier Estimate at time } t_{i-1}$$\n\nThankfully the `surv_pvalue` function in the `survminer` package can be used to calculate the p-value for all of these tests by changing the `method` argument. See the table below for the different method arguments to use:\n\n| Test                   | Method Argument             |\n|------------------------|-----------------------------|\n| Log Rank Test          | Default- no argument needed |\n| Wilcoxon/Gehan-Breslow | method = \"n\"                |\n| Tarone-Ware            | method = \"TW\"               |\n| Peto-Prentice          | method = \"PP\"               |\n| Fleming-Harrington     | method = \"FH\"               |\n\nThe `surv_pvalue` function does need a `survfit` object as input. We can use the `ninja_km_gender` object created earlier to check the p-values for the different methods.\n\n::: {.callout-note title=\"Exercise 8: Log-Rank Tests\"}\nRun the code below to see the p-values for the different methods.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurv_pvalue(ninja_km_gender) #log rank\nsurv_pvalue(ninja_km_gender, method = \"n\") #Gehan Breslow (generalized Wilcoxon)\nsurv_pvalue(ninja_km_gender, method = \"TW\") #tarone-ware\nsurv_pvalue(ninja_km_gender, method = \"PP\") #Peto-Prentice\nsurv_pvalue(ninja_km_gender, method = \"FH\") #Fleming-Harrington\n```\n:::\n\n\n\na.  Using $\\alpha = 0.05$, do all of the tests lead to the same conclusion? If so what is the conclusion? If not which ones agree and which ones do not?\n\nb.  Which **test** had the **smallest p-value**? \n\nc.  Which **test** had the **largest p-value**?\n\nd. Based off of the **p-values** for the different tests, would you conclude that the difference between the genders is most likely more significant at the beginning or end of the course? \n\n:::\n\n# More Practice\n\nRead in the [anw_2023_stage1](anw_2023_stage1.csv) data to complete the following problems.\n\n::: {.callout-note title=\"Do It Yourself\"}\n::: column-margin\nThe winner of the 2023 American Ninja Warrior competition was Vance Walker. Walker won $1 million for his victory.\n:::\n\n::: {.callout-note title=\"Challenge 1: Cleaning Data\"}\n\n\n\n\n\n\na.  There is **one** ninja in the dataset who did a second run. **Find and remove** this second run from the data.\n\nb.  Why should this run be removed? (Hint: Think knowledge gained)\n\nc.  Add a variable called `censor` to the dataset that is a 1 if the ninja fell and a 0 if the ninja completed the course or ran out of time.\n:::\n\n::: column-margin\n**Fun Fact**: Thread the Needle, the 8th obstacle on the 2021 Finals Stage 1 course, saw the highest failure rate of any obstacle. It had not previously been used on the Finals Stage 1 courses.\n:::\n\n::: {.callout-note title=\"Challenge 2: Fitting KM\"}\n\n\n\n\n\n\na.  Use the `survfit` function to find the Kaplan-Meier estimates\n\nb.  How many competitors were **at risk** at the **fifth** obstacle?\n\nc.  What is the **survival estimate** that a ninja survives past the **seventh** obstacle?\n\nd.  What is the **median** number of obstacles that a ninja survives on the course?\n:::\n\n::: column-margin\nClick [here](https://www.tandfonline.com/doi/full/10.1080/17498430.2018.1450055) to read more about Edward Kaplan and Paul Meier's work and how it has impacted the field of Statistics, particularly in regards to biostatistics.\n:::\n\n::: {.callout-note title=\"Challenge 3: Comparing Groups\"}\n\n\n\n\n\n\na.  Fit a `survdiff` model to compare the survival of males and females as well as another `survfit` model to find the Kaplan-Meier estimates for each group\n\nb.  What is the **test-static value** of the log-rank test?\n\nc.  What is your **conclusion** about the survival of males and females. Why?\n\nd.  Make a **plot** of the Kaplan-Meier estimates, showing the confidence intervals for each group.\n\ne.  Is it more likely that a female survives past the **fourth obstacle** or that a male survives past all **eight obstacles**?\n\nf.  Assume that the **null hypothesis** is that the true survival rate of surviving the first **4 obstacles** is equal for males and females. \\n The **alternative hypothesis** is that the true survival rates are different. \\n Based on **95% confidence intervals**, is it correct to say that the true mean of survival rate for males to survive past the **fourth obstacle** is **different** than the true mean of for females to survive past the **fourth obstacle**?\n:::\n:::\n\n# Conclusion \n\nIn this module, you have learned about the Kaplan-Meier estimator, which is used to estimate the survival function. The importance of censoring was discussed, and you learned how to calculate the Kaplan-Meier estimates. You also learned how to compare survival curves using the log-rank test and how to interpret the results.\n\nThe Kaplan-Meier estimates for American Ninja Warrior competitors helped us see the likelihood that a competitor survives past a certain number of obstacles in the Finals. Survival curves and nonparametric tests for different genders of American Ninja Warrior competitors helped us see that there is a significant difference in the survival rates of males and females. \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}