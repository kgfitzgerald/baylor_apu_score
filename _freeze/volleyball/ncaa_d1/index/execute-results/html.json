{
  "hash": "cf6e9d2c137239052b1cec4630630325",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Volleyball - Women's NCAA Division I\"\nauthor:\n  - name: Katie Fitzgerald\n    email: kfitzgerald@apu.edu\n    affiliation:\n      - id: apu\n        name: Azusa Pacific University\n  - name: Jazmine Gurrola\n    affiliation:\n      - ref: apu\n  - name: Joseph Hsieh\n    affiliation:\n      - ref: apu\n  - name: Dat Tran\n    affiliation:\n      - ref: apu\ndate: May 30, 2024\nformat:\n  html:\n    grid:\n      margin-width: 350px\ntoc: true\ntoc-location: left\ndescription: Exploring volleyball statistics through visualization\ncategories:\n  - Variable types\n  - ggplot basics\n  - Histograms\n  - Bar plots (simple & stacked)\n  - Scatterplots\n  - Ridge plots\n  - Side-by-side boxplots\neditor_options:\n  chunk_output_type: console\ncallout-icon: false\n---\n\n\n::: {.callout-note collapse=\"true\" title=\"Facilitation notes\" appearance=\"minimal\"}\n+ This module would be suitable for an in-class lab or take-home assignment in an introductory statistics course. \n\n+ It assumes a basic familiarity with the RStudio Environment has already been covered, but no prior programming experiences is expected.\n\n+ Students should be provided with the following data file (.csv) and Quarto document (.qmd) to produce visualizations and write up their answers to each exercise. Their final deliverable is to turn in an .html document produced by \"Rendering\" the .qmd. \n  \n  + [data](volleyball_ncaa_div1_2022_23_clean)\n  + [Student Quarto template](student_template.qmd)\n\n+ [Posit Cloud](https://posit.cloud/) (via an Instructor account) or [Github classroom](https://classroom.github.com) are good options for disseminating files to students, but simply uploading files to your university's course management system works, too.\n:::\n\n# Welcome video\n\n<iframe width=\"560\" height=\"315\" src title=\"placeholder\">\n\n</iframe>\n\n# Introduction\n\nIn this module, you will be analyzing data from the NCAA Division I Women's Volleyball season in 2022-3. The goal of this module is to help you explore data through visualization and to deepen your understanding of variable types (e.g. categorical, numerical). Data comes in many different forms, and an important part of being a good analyst is knowing what visualizations and analyses are appropriate and will provide insight into the data you have.\n\n::: {.callout-note title=\"Learning Objectives\" appearance=\"minimal\"}\nBy the end of this module, you will be able to:\n\n-   Read (import) a dataset into your RStudio Environment\n\n-   Use R to visualize the following types of variables:\n\n    -   one numeric variable (histogram, boxplot)\n\n    -   two numeric variables (scatterplot)\n\n    -   one categorical variable (simple bar plot)\n\n    -   two categorical variables (stacked and standardized bar plots)\n\n    -   one numeric + one categorical variable (faceted histogram, ridge plots, side-by-side boxplots)\n    \n    -   more than two variables (scatterplot with color or size aesthetic)\n\n-   Interpret visualizations to investigate a research question\n:::\n\n::: column-margin\n\\\n\\\n\\\n\\\n\n**NOTE**: **R** is the name of the programming language itself and **RStudio** is a convenient interface. To throw even more lingo in, you may be accessing RStudio through a web-based version called **Posit Cloud**. But R is the programming language you are learning :) \n:::\n\n::: {.callout-caution collapse=\"true\" title=\"Research Questions\"}\n\nDuring this lab, you'll investigate the following research questions (don't worry if you're new to volleyball, we'll introduce lingo soon!):\n\n+ Which NCAA Division I women’s volleyball team had the best and worst records during the 2022-3 season? What percentage of matches did they win? \n+ How many kills are typically scored per set?\n+ What is the most common way of scoring a point in volleyball (kill, block, or ace)?\n+ Which region has the most teams? Which conference has the most teams? How many teams are in a typical conference?\n+ If your defense tends to be strong (e.g. lots of digs), does your offense also tend to be strong (lots of kills)?\n+ Which conference had the most teams with winning seasons? Which conference had the least?\n+ Does the average number of blocks vary by region?\n+ What's the relationship between a team's hitting percentage, their opponent's hitting percentage, and their win percentage?\n+ If a team has strong hitters (that get lots of kills), are they also more likely to have strong blockers? \n+ What's the relationship between assists and kills? \n\n:::\n\n# Getting started: Volleyball data\n\nThe first step to any analysis in R is to **load necessary packages and data**. \n\n::: column-margin\nYou can think of **packages** like apps on your phone; they extend the functionality and give you access to many more features beyond what comes in the “base package”.\n:::\n\nRunning the following code will load the `tidyverse` and `ggridges` packages and the `volleyball` data we will be using in this lab.\n\n\n\n::: column-margin\n**TIP**: As you follow along in the lab, you should run each corresponding code chunk in your .qmd document. To \"Run\" a code chunk, you can press the green \"Play\" button in the top right corner of the code chunk in your .qmd. You can also place your cursor anywhere in the line(s) of code you want to run and press \"command + return\" (Mac) or \"Ctrl + Enter\" (Windows).\n:::\n\n::: column-margin\n**TIP**: Using a hashtag in R allows you to add comments to your code (in plain English). Data scientists often use comments to explain what each piece of the code is doing.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) #loads package\nlibrary(ggridges)\n\nvolleyball <- read_csv(\"volleyball_ncaa_div1_2022_23_clean.csv\") #loads data\n```\n:::\n\n\nWe can use the `glimpse()` function to get a quick look (errr.. glimpse) at our `volleyball` data. The `glimpse` code provides the number of observations (Rows) and the number of variables (Columns) in the dataset. The “Rows” and “Columns” are referred to as the **dimensions** of the dataset. It also shows us the names of the variables (`team`, `conference`, ..., `winning_season`) and the first few observations for each variable (e.g. the first three teams in the dataset are Lafayette, Deleware St., and Yale).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(volleyball)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 334\nColumns: 15\n$ team                 <chr> \"Lafayette\", \"Delaware St.\", \"Yale\", \"Coppin St.\"…\n$ conference           <chr> \"Patriot\", \"MEAC\", \"Ivy League\", \"MEAC\", \"Atlanti…\n$ region               <chr> \"East\", \"Southeast\", \"East\", \"Southeast\", \"East\",…\n$ aces_per_set         <dbl> 2.33, 2.20, 2.15, 2.15, 2.03, 1.98, 1.93, 1.91, 1…\n$ assists_per_set      <dbl> 11.01, 11.45, 12.60, 10.56, 11.61, 11.46, 12.26, …\n$ team_attacks_per_set <dbl> 34.54, 29.98, 35.39, 32.52, 34.10, 31.53, 37.03, …\n$ blocks_per_set       <dbl> 1.31, 2.17, 1.82, 1.81, 1.83, 2.39, 1.73, 1.85, 1…\n$ digs_per_set         <dbl> 13.60, 12.58, 15.29, 14.22, 14.27, 12.59, 15.39, …\n$ hitting_pctg         <dbl> 0.180, 0.250, 0.242, 0.194, 0.201, 0.226, 0.227, …\n$ kills_per_set        <dbl> 11.93, 12.12, 13.90, 11.54, 12.40, 12.24, 13.70, …\n$ opp_hitting_pctg     <dbl> 0.227, 0.137, 0.155, 0.170, 0.188, 0.175, 0.202, …\n$ w                    <dbl> 8, 24, 23, 23, 18, 17, 19, 16, 18, 20, 29, 15, 10…\n$ l                    <dbl> 15, 7, 3, 11, 13, 13, 13, 13, 13, 10, 4, 14, 20, …\n$ win_pctg             <dbl> 0.348, 0.774, 0.885, 0.676, 0.581, 0.567, 0.594, …\n$ winning_season       <chr> \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"…\n```\n\n\n:::\n:::\n\n\n::: column-margin\n**ERROR?** Did you get a error message that says `could not find function \"glimpse\"`? This means you need to load the `tidyverse` package. You can do this by running the code `library(tidyverse)` from the previous code chunk. A shortcut is to hit the \"fast-forward\" button (next to the \"Play\" button in your code chunk), which will run all code chunks above your current one.\n:::\n\n::: {.callout-note  title=\"Exercise 1\"}\n\na. What are the **dimensions** of this dataset?\n\n\nb. What are the **observational units** for this data? That is, what does one row represent?\n\nc. How many **categorical variables** are there? List the names of these variables. \n\nd. How many **continuous numeric variables** are there? \n\ne. How many **discrete numeric variables** are there? List the names of these variables. \n\n:::\n\n::: column-margin\n\\\n**TIP:** Type your answers to each exercise in the .qmd document. \n\\\n\\\n\\\n\\\n\\\n\\\n\\\n**TIP:** To distinguish between continuous and discrete, ask yourself \"can this variable have decimal values or only whole-numbers?\" Read more about variable types [here](win_loss_pctg).\n:::\n\n## Volleyball lingo\n\n\n\nBefore proceeding with any analysis, let's make sure we know some volleyball lingo in order to understand what information is contained in each variable (column) in our dataset. \n\n::: column-margin\nTotally new to volleyball? Watch this 4-minute video: [The Rules of Volleyball - EXPLAINED!](https://www.youtube.com/watch?v=9g7nYQv-kPM)\n:::\n\n\n::: column-margin\n#### Be the first team to win 3 sets to 25 points!!\n![](scoreboard.png)\nImage source: [BoxOut Sports](https://boxoutsports.com/graphics/volleyball/final-score)\n:::\n\n#### The basics\n-   To win a volleyball **match**, your team must be the first to win 3 **sets**\n-   A match can consist of 3, 4, or 5 sets (\"best 3 out of 5\")\n-   Your team wins a **set** if you are the first to score 25 points\n    -   but you have to win by at least 2 points!\n    -   and the 5th match (if necessary) only goes to 15 points\n-   **So how do you score points?** By hitting the ball into your opponents side of the court without them successfully returning the ball. (Or by them committing an unforced error such as a missed serve or running into the net, but we won't worry about that in this analysis). \n-   Play begins on each point with a **serve** from the back line and ends when the ball hits the ground.\n\n::: {.callout-important}\n\n#### Volleyball \"stats\" that might occur during any given play\n-   An [**ace**](https://youtu.be/iijvUf5xkkU?si=IeNP8aA_I7d21mh0) is a serve that directly results in a point (the opponent does not successfully return the serve). \n-   An **attack** is on offensive play where a player strategically hits the ball over the net using an overhead motion \n-   A [**kill**](https://youtu.be/tUzcjhn-4NI?si=pgT8qmxIKMbRBWWz) is when an attack results in a point for the attacking team (the opposing team doesn't \"dig\" or successfully return the ball)\n-   An [**assist**](https://youtu.be/1mngzX6Kj5Y?si=idFLgtZfDjVDOGmK&t=29) is recorded when a player passes or sets the ball to a teammate who attacks the ball for a kill. \n- A [**block**](https://youtu.be/zysWNW_jW5I?si=2n7-_T16TKogPLG6) is a defensive play at the net when a player successfully blocks the ball from an opponent's attack, sending it back down into the opponent's court, directly resulting in a point.\n- A [**dig**](https://youtu.be/Av-mL-STW4o?si=hPKS2GDExEPdGwDc) is a defensive play when a player successfully passes the ball from an attack and keeps it in play\n\n:::\n\n## Variable descriptions\n\nThe `volleyball` data you'll be analyzing in this lab provides season-level team statistics for 334 teams during the 2022-3 season. Many of the variables are reported as an average \"per set.\" For example, if a team played 30 matches, this means they played anywhere from 90 to 150 sets during the season, so `aces_per_set` provides the number of aces they scored, on average, across those 90+ sets. The table below provides detailed descriptions of each variable.\n\n<details>\n<summary><b>Variable Descriptions</b></summary>\n\n| Variable | Description |\n|----|----------------------------|\n| `team` | college of the volleyball team |\n| `conference` | conference to which the team belongs |\n| `region` | region to which the team belongs |\n| `aces_per_set` | the average amount of balls served that directly lead to a point (not including errors by the opponent) per set  |\n| `assists_per_set` | the average amount of sets, passes, or digs to a teammate that directly result in a kill per set |\n| `team_attacks_per_set` | the average amount of times the ball is sent to the other team’s court from an overhead motion per set |\n| `blocks-per_set` | the average amount of times the ball is blocked from being hit on to the teams side per set |\n| `digs_per_set` | average amount of times the ball is passed by a player successfully after an opponents attack per set |\n| `hitting_pctg` | total team kills minus team hitting errors all divided by total attempts |\n| `kills_per_set` | average amount of hits that directly result in a point per set |\n| `opp_hitting_pctg` | the average hitting percentage of the teams opponent per set |\n| `w` | the amount of team wins for the season |\n| `l` | the amount of team losses for the season |\n| `win_pctg` | the amount of total wins divided by the total matches of the season |\n| `winning_season` | Indication (yes/no) of whether the team won 50% or more of its matches during the season |\n\n## Viewing your data\n\nYou saw that `glimpse()` is one way to get a quick look at your data. Often, you'll want to view your whole dataset. There are two ways to do this:\n\n::: column-margin :::\n\\\n**TIP:** Recall that RStudio is split into four quadrants: Source (upper left), **Environment** (upper right), **Console** (bottom left), and Files/Plots/Packages/Help/Viewer (bottom right)\n\n[INSERT ANNOTATED IMAGE HERE??]\n:::\n\n1. type `View(volleyball)` in your **Console** and then click return/Enter on your keyboard. \n2. OR, in your **Environment** tab, double click the name of the dataset you want to view. \n\nThis will open up your data in a new viewer tab so that you can view it like a spreadsheet (like Google Sheets or Excel\\*). Once open, you can sort the data by clicking on a column. \n\n::: column-margin :::\n\\*Unlike Google Sheets or Excel, however, you won't be able to *edit* the data directly in the spreadsheet.\n:::\n\n::: {.callout-note  title=\"Exercise 2\"}\n\n`View` the `volleyball` data and sort it appropriately to answer the following questions:\n\na. Which NCAA Division I women's volleyball team had the **best** record (highest win percentage) during the 2022-3 season?\n\nb. What percentage of their matches did this team win? \n\nc. What conference and region is this team in?\n\nd. Which team had the **worst** record? \n\ne. What percentage of their matches did they win? \n\nf. What conference and region is this team in?\n\n:::\n\n::: column-margin :::\n**TIP**: When viewing the data, clicking on a column once will sort the data according to that variable in *ascending* order; clicking twice will sort in *descending* order.\n:::\n\n## Creating visualizations\n\nR (and the `tidyverse` package in particular) has some powerful functions for making visualizations. The type of visualization you should create depends on the type(s) of variable(s) you are exploring. In the remainder of this module, you will explore the `volleyball` data via visualizations.\n\n# One numerical variable\n\n::: {.callout-caution title=\"Research question\"}\n\nHow many kills are typically scored per set?\n\n:::\n\nBecause `kills_per_set`is a **numeric variable**, it is appropriate to visualize it using a **histogram** We can create a histogram of number of kills per set with the following code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = kills_per_set)) + \n  geom_histogram(color = \"white\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n::: column-margin :::\n**TIP**: Your code must refer to datasets and variable names *exactly* as they are appear in your Environment/data. If, for example, we instead had saved the `volleyball` data as `vball` and the variable name was `Kills_per_set` (with a capital `K`), the first line of plotting code would instead need to be `ggplot(vball, aes(x = Kills_per_set))`. It's usually a good idea to open your data in your Environment and/or run `glimpse()` on your data to verify the exact names. \n:::\n\n::: column-margin :::\n\n**TIP**: When you run the histogram code, you may see the default message: \"`stat_bin() using bins = 30. Pick better value with binwidth`.\" This is just a message, not an error. It's simply informing you that by default `ggplot()` uses 30 bins when creating a histogram, but you can change this by adding `bins = XX` inside of `geom_histogram()`. For example, `geom_histogram(bins = 10)` will create a histogram with 10 bins. Alternatively, you can specify the *width* of each bin using `binwidth`. Try using `geom_histogram(binwidth = 1)` to see what happens. \n:::\n\n::: {.callout-important}\n## IMPORTANT SUMMARY: ggplot basics\nEvery basic visualization created with `ggplot` must contain at least two \"layers\" that are added together with a `+` sign: \n\n1. the `ggplot()` layer to initiate a blank visualization \n2. a `geom_xxxx()` layer to specify what type of `geom`etric object(s) you want to place in the visualization (e.g. points, bars, histogram, boxplot, etc). \n\nThe `ggplot()` layer should always have two things:\n\n1. the name of the dataset, provided as the first argument\n2. an `aes()` function that specifies how variables will get mapped to `aes`thetic elements of the plot, such as the `x` or `y` axis, or the `size` or `color` of dots or lines.\n:::\n\n::: column-margin :::\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\nWe use the term \"argument\" to refer to the \"inputs\" to a function. \n:::\n\n::: {.callout-note  title=\"Exercise 3\"}\n\na. Copy, paste the code above to reproduce the visualization in your document.\n\nb. Describe the shape of the distribution of `kills_per_set`. Make sure to comment on **modality**, **skewness**, and whether there are any **potential outliers**. \n\nc. Based on this histogram, how would you answer the research question (how many kills are typical per set)? \n\n:::\n\n::: column-margin :::\n\\\n\\\n**TIP**: Read [here](https://openintro-ims.netlify.app/explore-numerical#histograms) for a reminder of terminology and how to describe a distribution in terms of its modality and skewness.    \n:::\n\n::: {.callout-note  title=\"Exercise 4\"}\na. Copy, paste, tweak the `ggplot()` code above to explore the distribution of `blocks_per_set`.\n\nb. Describe the shape of the distribution and interpret what you see.\n\nc. Copy, paste, tweak the `ggplot()` code above to explore the distribution of `aces_per_set`.\n\nd. Describe the shape of the distribution and interpret what you see.\n\ne. What is the most common way of scoring a point in volleyball (kill, block, or ace)?\n:::\n\nAnother common visualization for a numeric variable is a **boxplot**. The following image shows 3 boxplots and 3 histograms for the variables explored above.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note  title=\"Exercise 5\"}\n\nThe histograms and boxplots are visualizing the same information, but each visualization types has different pros/cons. \n\na. Is modality visible in both types of visualizations? Explain.\n\nb. Is skewness visible in both types of visualizations? Explain.\n\nc. Are potential outliers visible in both types of visualizations? Explain.\n\nd. Is there any additional information in a boxplot that's not provided by a histogram? Explain.\n\n:::\n\n# One categorical variable\n\nLet's use visualization to explore another question:\n\n::: {.callout-caution title=\"Research question\"}\n\n**Which region has the most teams?**\n\n:::\n\nBecause `region` is a **categorical variable**, it is appropriate to visualize it using a **bar plot**. \n\nThe general template for creating a simple bar plot is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = variable)) +\n  geom_bar()\n```\n:::\n\n\nNotice it follows the same general format as the histogram code, but now we use `geom_bar()` instead of `geom_histogram()` because we are dealing with one categorical instead of one numeric variable. \n\n::: {.callout-note  title=\"Exercise 6\"}\na. Copy, paste, tweak the code above to create a bar plot for `region`. \n\nb. Which region has the most teams?\n\n:::\n\n::: column-margin \n\\\n**TIP**: In the template code, `data` and `variable` are just placeholders. Make sure to replace them with the appropriate dataset and variable names for this analysis.\n\n:::\n\n# Two numeric variables\n\n::: {.callout-caution title=\"Research question\"}\n\nIf your defense tends to be strong (e.g. lots of digs), does your offense also tend to be strong (lots of kills)?\n\n:::\n\nTo investigate this question, we need a **scatterplot** because we are dealing with **two numeric variables**.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = digs_per_set, y = kills_per_set)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n::: column-margin \n\\\n\nNotice that the scatterplot code again follows the same general format of a `ggplot()` layer, with data and `aes`thetics sepcified inside, and a `geom_` layer, this time `geom_point()`. Because a scatterplot is for *two* variables instead of one, we must specify two variables, `x` and `y`, in the `aes()` function. \n\n:::\n\n::: {.callout-note  title=\"Exercise 7\"}\na. Copy, paste the scatterplot code into your .qmd to reproduce the visualization in your document. \n\nb. Use the scatterplot to answer the research question. Make sure to comment on the strength and direction of the relationship.\n\n:::\n\n# Two categorical variables\n\nConsider our next research question: \n\n::: {.callout-caution  title=\"Research question\"}\n\nWhich conference had the most teams with winning seasons? Which conference had the least?\n\n:::\n\nNote that this is a question about **two categorical variables,** `conference` and `winning_season`, therefore, a **stacked bar plot** is appropriate for investigating this question. We can do this using the code below:\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(y = conference, fill = winning_season)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-important}\n\n## Using `fill` in ggplot\n\nNote that we added the second categorical variable to the `fill` `aes`thetic because we \"fill\" the bar with the categories of `winning_season`. We can adapt the code further to turn the stacked bar plot into a **standardized bar plot**.\n\nAdding `position = \"fill\"` inside `geom_bar()` turns the stacked bar plot into a standardized bar plot. Since the x axis now shows proportions instead of counts, we use a `labs()` layer to change the x-axis label.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(y = conference, fill = winning_season)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"proportion\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-note  title=\"Exercise 8\"}\n\na. Copy, paste the code for both visualizations above to recreate them in your document.\n\nb. Comment on the differences between the stacked and standardized stacked bar plot.\n\nc. What conference had the *most* teams with winning seasons? Do the two visualizations lead to different interpretations of this question? Explain. \n\nd. What conference had the *least* teams with winning seasons? Do the two visualizations lead to different interpretations of this question? Explain. \n\ne. Which of the two visualizations would you choose to communicate an answer to these research questions? Comment on pros and cons of your choice. \n\n:::\n\n# One numeric & one categorical variable\n\n::: {.callout-caution  title=\"Research question\"}\n\nDoes the average number of attacks vary by region? \n\n:::\n\nNote that now we are interested in comparing a numeric variable (`team_attacks_per_set`) across groups of a categorical variable (`region`). To visualize one numeric + one categorical variable, we have a couple options:\n\n-   faceted histogram\n\n-   ridge plot\n\n-   side-by-side boxplot \n\nTo create a faceted histogram, we simply add a layer called `facet_wrap()` to our visualization pipeline for a histogram, which specifies which categorical variable we want to `facet` by. We use `ncol = 1` to specify that we want the histograms to all appear in 1 column (by default it will place them all next to each other in 1 row).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = team_attacks_per_set)) +\n  geom_histogram(color = \"white\", binwidth = 0.5) + \n  facet_wrap(~ region, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nTo create a ridge plot, we use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = team_attacks_per_set, y = region)) +\n   geom_density_ridges()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = team_attacks_per_set, y = region)) +\n   geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note  title=\"Exercise 9\"}\n\na. Copy, paste the code for the three visualizations above to reproduce them in your document.\n\nb. All of the above visualizations display the same data. Comment on what you observe. Use the visualizations to answer the research question: do number of attacks differ by region?\n\n\nc. Comment on which of the three visualizations you prefer and why.\n\n:::\n\n# More than 2 variables\n\nWe can utilize extra `aes`thetics (in addition to x- and y-axis) such as `color`, `shape`, or `size` to investigate relationships of more than two variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = hitting_pctg, y = opp_hitting_pctg,\n                        color = win_pctg)) +\n  geom_point() +\n  scale_color_gradient(trans = \"reverse\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n::: column-margin\n**Note:** the third layer here `scale_color_gradient()` is not strictly necessary. It simply reverse the order of the color scale so that larger numbers are darker and smaller numbers are lighter, which tends to align better with viewer's intuition. \n:::\n\n::: column-margin\n\n**EXTRA**: We could add in a 4th or even 5th variable using additional aesthetics such as `size` or `alpha` (transparency), but often squeezing too many variables into one visualization makes it cognitively difficult to process and interpret. Alternatively, we may sometimes choose to \"double encode\" a variable (2 aesthetics for the same variable) to make a relationship in the data more visually salient. But there should be a clear reason for doing so, and you should make sure the extra encoding doesn't confuse the viewer. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(volleyball, aes(x = hitting_pctg, y = opp_hitting_pctg,\n                        color = win_pctg, size = win_pctg)) +\n  geom_point() +\n  scale_color_gradient(trans = \"reverse\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.callout-note  title=\"Exercise 10\"}\n\na. Copy, paste the code above to recreate the visualization in your document. \n\nb. What are the variables being displayed in the visualization above? What type of variables are they?\n\nc. What insight can be gleaned from the above visualizations? Comment on 2 things the visualizations reveal about NCAA volleyball teams. \n\n:::\n\n# Practice on new research questions\n\n::: {.callout-important}\n## IMPORTANT SUMMARY\n\nData visualizations are a useful tool for exploring a dataset and investigating research questions. You've now been exposed to code for creating visualizations for many different data types. Now, it's your turn to practice choosing an appropriate visualization for new research questions.\n\nTo get started, you should always ask yourself a series of questions:\n\n1. what variable(s) in my dataset are relevant for answering the research question?\n2. what type of variable is each one?\n3. what type of visualization is appropriate for the type(s) and number of variables you have\n\nIn the following exercises, once you determine the appropriate visualization for your question, you should copy, paste, tweak code from the appropriate section of this lab to visually investigate the research question. \n\nFor example, if you identify that you have two numeric variables, you should copy paste code for scatterplots from the \"Two numeric variables\" section of this lab.\n:::\n\n::: {.callout-note  title=\"Exercise 11\"}\n\nKills and blocks are both typically scored by tall players at the net. Is there a strong positive relationship between kills and blocks? In other words, if a team has strong hitters (that get lots of kills), are they also more likely to have strong blockers? Produce a visualization to investigate this question and comment on your findings. \n\n:::\n\n::: {.callout-note  title=\"Exercise 12\"}\n\nProduce one visualization to answer the following questions:\n\na. What conference has the most teams? \n\nb. About how many teams are in a typical conference? (You can \"eyeball\" this from the visualization - don't need to calculate an actual number)\n\n:::\n\n::: column-margin\n\\\n\\\n\\\n**TIP**: If the x-axis of your visualization is too cluttered to read all the category labels, try switching the categorical variable to the y-axis instead. You can do this by simply specifying `y = variable` instead of `x = variable` inside `aes()`.\n:::\n\n::: {.callout-note  title=\"Exercise 13\"}\n\nProduce a visualization to investigate the relationship between assists and kills. Comment on what you find and explain why the relationship is what it is. \n\n:::\n\n::: {.callout-note  title=\"Exercise 14\"}\n\nProduce one visualization to investigate the following questions and comment on your findings: \n\na. Is there a wide range of win percentages across college volleyball teams, or do most teams win roughly 50% of their matches?\n\nb. Did any team have a perfect season? That is, did anyone win 100% of their matches? \n\nc. The name of the \"best\" team isn't visible in your visualization, but in Exercise 2a you identified who this team was. Google to find out who won the championship in 2022-3. Was it the team with the best record? \n\n:::\n\n\n# BONUS practice\n\n::: {.callout-note  title=\"BONUS 1\"}\n\n\nState an additional research question that can be investigated using the `volleyball` data, and create a visualization to investigate it. Comment on your findings.\n\n::: \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}